<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            font-family: Arial, sans-serif;
            background-color: #f7f7f7;
            min-width: 375px;
        }

        .container {
            background: #fff;
            padding: 25px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            max-width: 400px;
            min-width: 325px;
            width: 100%;
        }

        .logo {
            max-width: 250px;
        }

        h1 {
            margin-bottom: 1.5rem;
            font-size: 1.5rem;
            text-align: center;
        }

        form {
            display: flex;
            flex-direction: column;
        }

        label {
            margin-bottom: 0.5rem;
            font-weight: bold;
        }

        input {
            padding: 0.75rem;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        .input-container {
            width: 100%;
            position: relative;
            margin-bottom: 1rem;
            display: flex;
            flex-direction: column;
        }

        .show-password-button {
            position: absolute;
            right: 10px;
            top: 70%;
            transform: translateY(-50%);
            background: none;
            border: none;
            cursor: pointer;
            font-size: 0.9rem;
            color: #4338CA;
        }

        .show-password-button:focus {
            outline: none;
        }

        .error {
            color: red;
            margin-bottom: 1rem;
            display: none;
        }

        .reset-button {
            width: 100%;
            padding: 0.75rem;
            border: none;
            border-radius: 4px;
            background-color: #4338CA;
            color: #fff;
            font-size: 1rem;
            font-weight: bold;
            cursor: pointer;
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .reset-button:disabled {
            background-color: #211b63;
            cursor: not-allowed;
        }

        .reset-button.loading .spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: #fff;
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }

        .reset-button.loading span {
            display: none;
        }

        .reset-button:hover:not(:disabled) {
            background-color: #3730a3;
        }

        .message {
            display: none;
            margin-top: 1rem;
            padding: 0.75rem;
            border-radius: 4px;
            font-size: 1rem;
            text-align: center;
        }

        .success {
            background-color: #d4edda;
            color: #155724;
        }

        .failure {
            background-color: #f8d7da;
            color: #721c24;
        }

        .expired {
            background-color: #ffcccb;
            color: #d9534f;
        }
    </style>
</head>

<body>
    <div class="container">
        <img src="/assets/NextAdminLogo.svg" alt="Next Admin Logo" class="logo">
        <h1 id="form-title">Reset Your Password</h1>
        <form id="resetPasswordForm">
            <div class="input-container">
                <label for="password">New Password:</label>
                <input type="password" id="password" name="password" placeholder="Enter your password here" required>
                <button type="button" class="show-password-button"
                    onclick="togglePasswordVisibility('password')">Show</button>
            </div>
            <div class="error" id="password-error"></div>
            <div class="input-container">
                <label for="confirm-password">Confirm New Password:</label>
                <input type="password" id="confirm-password" name="confirmPassword"
                    placeholder="Re-enter your password here" required>
                <button type="button" class="show-password-button"
                    onclick="togglePasswordVisibility('confirm-password')">Show</button>
            </div>
            <div class="error" id="confirm-password-error"></div>
            <button type="submit" class="reset-button">
                <span>Reset Password</span>
                <div class="spinner" style="display:none;"></div>
            </button>
        </form>
        <div id="message" class="message"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const token = encodeURIComponent('<%= token %>');
            const message = document.getElementById('message');
            const form = document.getElementById('resetPasswordForm');
            const title = document.getElementById('form-title');

            // Verify reset password token on page load
            const xhr = new XMLHttpRequest();
            xhr.open('GET', `https://next-form-app-auth-backend-fb01c8c171e9.herokuapp.com/auth/verify-reset-password-token/${token}`, true);
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        form.style.display = 'block';
                        message.style.display = 'none';
                    } else if (xhr.status === 400) {
                        title.textContent = "Reset Password Link Expired";
                        message.textContent = "The reset password link has expired.";
                        message.className = 'message expired';
                        message.style.display = 'block';
                        form.style.display = 'none';
                    } else {
                        title.textContent = "Error";
                        message.textContent = "An error occurred. Please try again later.";
                        message.className = 'message failure';
                        message.style.display = 'block';
                        form.style.display = 'none';
                    }
                }
            };
            xhr.send();
        });

        function togglePasswordVisibility(fieldId) {
            const field = document.getElementById(fieldId);
            const button = field.nextElementSibling;
            if (field.type === "password") {
                field.type = "text";
                button.textContent = "Hide";
            } else {
                field.type = "password";
                button.textContent = "Show";
            }
        }

        document.getElementById('resetPasswordForm').addEventListener('submit', function (event) {
            event.preventDefault(); // Prevent form submission

            const token = '<%= token %>';
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirm-password').value;
            const passwordError = document.getElementById('password-error');
            const confirmPasswordError = document.getElementById('confirm-password-error');
            const message = document.getElementById('message');
            const form = this;
            const submitButton = form.querySelector('.reset-button');
            const spinner = submitButton.querySelector('.spinner');

            let formIsValid = true;
            let errors = {};

            // Password validations
            if (!password) {
                errors.password = "Password is required";
                formIsValid = false;
            } else if (password.length < 8) {
                errors.password = "Password must be at least 8 characters";
                formIsValid = false;
            } else if (!/\d/.test(password) || !/[!@#$%^&*(),.?":{}|<>]/.test(password)) {
                errors.password = "Password must include at least one number and one symbol";
                formIsValid = false;
            }

            // Confirm password validations
            if (!confirmPassword) {
                errors.confirmPassword = "Confirm Password is required";
                formIsValid = false;
            } else if (password !== confirmPassword) {
                errors.confirmPassword = "Passwords do not match";
                formIsValid = false;
            }

            if (formIsValid) {
                passwordError.style.display = 'none';
                confirmPasswordError.style.display = 'none';

                // Show loading state on button
                submitButton.disabled = true;
                submitButton.classList.add('loading');
                spinner.style.display = 'inline-block';

                // Perform AJAX request after 1 second delay
                setTimeout(function () {
                    const xhr = new XMLHttpRequest();
                    xhr.open('POST', `https://next-form-app-auth-backend-fb01c8c171e9.herokuapp.com/auth/reset-password/${token}`, true);
                    xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState === 4) {
                            submitButton.disabled = false;
                            submitButton.classList.remove('loading');
                            spinner.style.display = 'none';

                            if (xhr.status === 200) {
                                message.textContent = "Password reset successfully!";
                                message.className = 'message success';
                                message.style.display = 'block';
                                form.style.display = 'none'; // Hide form
                            } else if (xhr.status === 400) {
                                message.textContent = "The reset password link has expired.";
                                message.className = 'message expired';
                                message.style.display = 'block';
                            } else {
                                message.textContent = "Failed to reset password. Please try again.";
                                message.className = 'message failure';
                                message.style.display = 'block';
                            }
                        }
                    };
                    const data = JSON.stringify({
                        password: password,
                        confirmPassword: confirmPassword
                    });
                    xhr.send(data);
                }, 1000);
            } else {
                if (errors.password) {
                    passwordError.textContent = errors.password;
                    passwordError.style.display = 'block';
                } else {
                    passwordError.style.display = 'none';
                }
                if (errors.confirmPassword) {
                    confirmPasswordError.textContent = errors.confirmPassword;
                    confirmPasswordError.style.display = 'block';
                } else {
                    confirmPasswordError.style.display = 'none';
                }
            }
        });
    </script>
</body>

</html>